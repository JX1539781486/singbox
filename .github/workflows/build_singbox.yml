name: Update sing-box

on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "LICENSE"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep '"version"' | head -1 | awk -F'"' '{print $4}') >> $GITHUB_OUTPUT

  puernya:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      puernya_version: ${{ steps.puernya.outputs.puernya_version }}
      puernya_dev_version: ${{ steps.puernya.outputs.puernya_dev_version }}
      puernya_tags: ${{ steps.puernya.outputs.puernya_tags }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Get `sing-box PuerNya` version
        id: puernya
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          full_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          # Extract the main version (e.g., 1.10.0 from 1.10.0-alpha.29-067c81a7)
          main_version=$(echo $full_version | cut -d '-' -f 1)
          # Generate dev version (e.g., 1.10.0-dev)
          dev_version="${main_version}-dev"
          echo "puernya_version=$main_version" >> $GITHUB_OUTPUT
          echo "puernya_dev_version=$dev_version" >> $GITHUB_OUTPUT
          echo "puernya_tags=with_quic,with_dhcp,with_wireguard,with_shadowsocksr,with_ech,with_utls,with_clash_api,with_gvisor" >> $GITHUB_OUTPUT

  build_and_package:
    runs-on: ubuntu-latest
    needs: puernya
    env:
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
      puernya_DEV_VERSION: ${{ needs.puernya.outputs.puernya_dev_version }}
      puernya_TAGS: ${{ needs.puernya.outputs.puernya_tags }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Initialize Go module
        run: |
          if [ ! -f go.mod ]; then
            go mod init sing-box
          fi

      - name: Build and package `sing-box` cores
        run: |
          mkdir -p ./tmp-sing-box/
          archs=(amd64 amd64-v3 armv5 armv6 armv7 arm64 mips-softfloat mipsle-hardfloat mipsle-softfloat arm64)
          new_name=(amd64 amd64v3 armv5 armv6 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat arm64)
          # Build `PuerNya` cores
          for((i=0;i<10;i++));do
            CGO_ENABLED=0 GOARCH=${archs[i]} go build -ldflags="-s -w -X main.Version=${{ env.puernya_VERSION }} -X main.BuildTags=${{ env.puernya_TAGS }}" -o ./tmp-sing-box/sing-box-puernya-linux-${archs[i]}/sing-box ./cmd/sing-box
            CGO_ENABLED=0 GOARCH=${archs[i]} GOOS=android go build -ldflags="-s -w -X main.Version=${{ env.puernya_VERSION }} -X main.BuildTags=${{ env.puernya_TAGS }}" -o ./tmp-sing-box/sing-box-puernya-android-${archs[i]}/sing-box ./cmd/sing-box
          done
          # Build `PuerNya` cores for Windows
          CGO_ENABLED=0 GOARCH=amd64 GOOS=windows go build -ldflags="-s -w -X main.Version=${{ env.puernya_VERSION }} -X main.BuildTags=${{ env.puernya_TAGS }}" -o ./tmp-sing-box/sing-box-puernya-windows-amd64/sing-box.exe ./cmd/sing-box
          CGO_ENABLED=0 GOARCH=amd64 GOOS=windows go build -ldflags="-s -w -X main.Version=${{ env.puernya_VERSION }} -X main.BuildTags=${{ env.puernya_TAGS }}" -tags netgo -o ./tmp-sing-box/sing-box-puernya-windows-amd64-v3/sing-box.exe ./cmd/sing-box
          CGO_ENABLED=0 GOARCH=arm64 GOOS=windows go build -ldflags="-s -w -X main.Version=${{ env.puernya_VERSION }} -X main.BuildTags=${{ env.puernya_TAGS }}" -o ./tmp-sing-box/sing-box-puernya-windows-arm64/sing-box.exe ./cmd/sing-box

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-cores
          path: ./tmp-sing-box/

  push_sing_box:
    runs-on: ubuntu-latest
    needs: build_and_package
    env:
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
      puernya_DEV_VERSION: ${{ needs.puernya.outputs.puernya_dev_version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sing-box-cores
          path: ./tmp-sing-box/

      - name: List downloaded files
        run: ls -R ./tmp-sing-box/

      - name: Zip `sing-box` cores by `tar`
        run: |
          mkdir -p ./tmp-sing-box/compress/
          archs=(amd64 amd64-v3 armv5 armv6 armv7 arm64 mips-softfloat mipsle-hardfloat mipsle-softfloat arm64)
          new_name=(amd64 amd64v3 armv5 armv6 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat arm64)
          # `PuerNya` cores
          for((i=0;i<10;i++));do
            if [ -f "./tmp-sing-box/sing-box-puernya-linux-${archs[i]}/sing-box" ]; then
              mv -f "./tmp-sing-box/sing-box-puernya-linux-${archs[i]}/sing-box" ./tmp-sing-box/CrashCore
              chmod +x ./tmp-sing-box/CrashCore
              tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-puernya-linux-${new_name[i]}-${{ env.puernya_VERSION }}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
            fi
          done
          # `PuerNya` cores for Android
          if [ -f "./tmp-sing-box/sing-box-puernya-android-arm64/sing-box" ]; then
            mv -f "./tmp-sing-box/sing-box-puernya-android-arm64/sing-box" ./tmp-sing-box/CrashCore
            chmod +x ./tmp-sing-box/CrashCore
            tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-puernya-android-arm64-${{ env.puernya_VERSION }}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
          fi

      - name: Move `sing-box` cores
        run: |
          mkdir -p ./sing-box/
          mv -f ./tmp-sing-box/compress/* ./sing-box/
          # `PuerNya` cores for Windows
          mv -f ./tmp-sing-box/sing-box-puernya-windows-amd64/sing-box.exe ./sing-box/sing-box-puernya-windows-amd64-${{ env.puernya_VERSION }}.exe
          mv -f ./tmp-sing-box/sing-box-puernya-windows-amd64-v3/sing-box.exe ./sing-box/sing-box-puernya-windows-amd64v3-${{ env.puernya_VERSION }}.exe
          mv -f ./tmp-sing-box/sing-box-puernya-windows-arm64/sing-box.exe ./sing-box/sing-box-puernya-windows-arm64-${{ env.puernya_VERSION }}.exe

      - name: Release and upload `sing-box` assets (latest release)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: "${{ env.puernya_VERSION }}"
          tag: "v${{ env.puernya_VERSION }}"
          overwrite: true
          body: "[sing-box][PuerNya 版](https://github.com/PuerNya/sing-box/tree/building)内核"
          file_glob: true
          file: ./sing-box/*

      - name: Release and upload `sing-box` assets (dev release)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: "${{ env.puernya_DEV_VERSION }}"
          tag: "v${{ env.puernya_DEV_VERSION }}"
          prerelease: true
          overwrite: true
          body: "[sing-box][PuerNya 版](https://github.com/PuerNya/sing-box/tree/building)内核"
          file_glob: true
          file: ./sing-box/*

      - name: Commit and push `sing-box` branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add . && git commit -m "更新 sing-box 内核 PuerNya 版至 v${{ env.puernya_VERSION }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Purge jsDelivr CDN
        run: |
          cd ./sing-box/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/${file}"
          done
